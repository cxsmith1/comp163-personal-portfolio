import math

#Challenge 1
current_number = int(input('Enter starting number: '))
step_count = 0

while current_number > 1: #While the number entered is greater than our end goal, we run the loop
    if current_number % 2 != 1: #if input is divisible by 2 and can get down to one, divide by two (next line)
       current_number = int(current_number) / 2 
       print(current_number, end=' ')
       step_count += 1 #step count
    else:
        current_number = (int(n) * 3) + 1 #if input is odd, multiply by 3 and add one
        print(current_number, end=' ')
        current_number = (int(n) / 2) #divide by 2 after made even
        print(current_number, end=' ')
        step_count +=1 #step count

print (f'\nSteps: {step_count}') #total steps taken to get final answer

#Challenge 2

primefr = True #set to true unless proven otherwise
n = int(input('Enter a number: '))
newt = n-1
print(f'Testing divisors from 2 to {newt}...')

for i in range(2, newt): #for loop in range 2 to variable
    if n % i == 0: #check if variable can be divided
        print(f'{n} is not prime (divisible by {i})') #if it can it is now false
        primefr = False
            
if primefr: 
    print(f'{n} is prime!') #response cannot be divided

# Challenge 3

   
        
        
